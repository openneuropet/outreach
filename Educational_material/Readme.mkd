# PET2BIDS Educational material

## Content

- a refreher about BIDS
- file conversion using PET2BIDS (matlab, python, tabular meta data)
- handling blood metadata
- how to contribute

## The BIDS standard

Since you are learning about PET2BIDS you must be familiar with the the [BIDS standard](https://bids.neuroimaging.io/). If you need a refresher you can check that talk from Melanie Ganz-Benjaminsen:

[![PET-BIDS](https://github.com/openneuropet/outreach/blob/main/Educational_material/pics/PET-BIDS.jpg)](https://youtu.be/1-sgAct6_NY "PET-BIDS") 

A more practical way to learn about PET2BIDS and BIDS is to use the [stater kit](https://bids-standard.github.io/bids-starter-kit/).

## Converting DICOM and ecat files

### What scanners are supported?

In theory all scanners are supported, thanks to dcm2nixx! all we do is wrap around and add metadata. Below is list a phantom successfully converted, as you can see GE, Siemens and Phillips seems to work fine :-). 

![scanner_tested](https://github.com/openneuropet/outreach/blob/4f271ad881f51d1aea6404f67536300feb26d736/Educational_material/pics/phantoms.jpg)

### How do I do this with Matlab?

Step 1: create a metadata structure using get_pet_metadata.m  
Step 2: call ecat2nii.m or dcm2niix4pet.m  

Check this short [video using our matlab code](https://drive.google.com/file/d/1zIvdTknnHJXRTsrpKBRgY_X7OQJVKNBi/view?usp=sharing/preview)

### How do I do this with Python?

Step 1: pip install pypet2bids  
Step 2: call ecat2nii or dcm2niix4pet  

Check this short [video using our python code](https://drive.google.com/file/d/1CF80-u3emD6-fumwDvWHxKJhSFvFvnlM/view?usp=sharing/preview)

## Generating json files from tabular Educational

### PET metadata

Call convert_subject_metadata_spreadsheet (.m .py) or convert_metadata_spreadsheets (.m .py) to convert preformated spreadshhet. Examples are provided ensuring you have the right formatting.

### Give me blood

Call convert_pmod_to_blood (.m .py) to convert .bld pmod files.

## Contribution and Geek stuff

We have a [very inclusive policy for contribution as explained here](https://github.com/openneuropet/PET2BIDS/blob/main/contributing.md). As soon as you start doing stuff with us you are part of the project.

FYI, when you look at the repository we have Matlab and python code. To make sure it does similar things, each pulls information from the _metadata_ directory where we have json files. This means that if some metadata are not handled by our code (say some key values for a reconstruction algorithm), all you need to do it update the right json file and do a pull request (or email it) and the code now takes care of it.
